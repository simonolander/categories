/*
 * This file is generated by jOOQ.
*/
package se.olander.categories.jooq.categories.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import se.olander.categories.jooq.categories.tables.Categories;
import se.olander.categories.jooq.categories.tables.records.CategoriesRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CategoriesDao extends DAOImpl<CategoriesRecord, se.olander.categories.jooq.categories.tables.pojos.Categories, Integer> {

    /**
     * Create a new CategoriesDao without any configuration
     */
    public CategoriesDao() {
        super(Categories.CATEGORIES_, se.olander.categories.jooq.categories.tables.pojos.Categories.class);
    }

    /**
     * Create a new CategoriesDao with an attached configuration
     */
    public CategoriesDao(Configuration configuration) {
        super(Categories.CATEGORIES_, se.olander.categories.jooq.categories.tables.pojos.Categories.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(se.olander.categories.jooq.categories.tables.pojos.Categories object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<se.olander.categories.jooq.categories.tables.pojos.Categories> fetchById(Integer... values) {
        return fetch(Categories.CATEGORIES_.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public se.olander.categories.jooq.categories.tables.pojos.Categories fetchOneById(Integer value) {
        return fetchOne(Categories.CATEGORIES_.ID, value);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<se.olander.categories.jooq.categories.tables.pojos.Categories> fetchByName(String... values) {
        return fetch(Categories.CATEGORIES_.NAME, values);
    }
}
