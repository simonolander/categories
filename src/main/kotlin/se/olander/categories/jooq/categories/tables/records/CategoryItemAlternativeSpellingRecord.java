/*
 * This file is generated by jOOQ.
*/
package se.olander.categories.jooq.categories.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import se.olander.categories.jooq.categories.tables.CategoryItemAlternativeSpelling;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CategoryItemAlternativeSpellingRecord extends UpdatableRecordImpl<CategoryItemAlternativeSpellingRecord> implements Record4<Integer, Integer, Integer, String> {

    private static final long serialVersionUID = -533699170;

    /**
     * Setter for <code>categories.category_item_alternative_spelling.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>categories.category_item_alternative_spelling.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>categories.category_item_alternative_spelling.category_id</code>.
     */
    public void setCategoryId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>categories.category_item_alternative_spelling.category_id</code>.
     */
    public Integer getCategoryId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>categories.category_item_alternative_spelling.category_item_id</code>.
     */
    public void setCategoryItemId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>categories.category_item_alternative_spelling.category_item_id</code>.
     */
    public Integer getCategoryItemId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>categories.category_item_alternative_spelling.spelling</code>.
     */
    public void setSpelling(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>categories.category_item_alternative_spelling.spelling</code>.
     */
    public String getSpelling() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Integer, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Integer, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return CategoryItemAlternativeSpelling.CATEGORY_ITEM_ALTERNATIVE_SPELLING.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return CategoryItemAlternativeSpelling.CATEGORY_ITEM_ALTERNATIVE_SPELLING.CATEGORY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return CategoryItemAlternativeSpelling.CATEGORY_ITEM_ALTERNATIVE_SPELLING.CATEGORY_ITEM_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return CategoryItemAlternativeSpelling.CATEGORY_ITEM_ALTERNATIVE_SPELLING.SPELLING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getCategoryId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getCategoryItemId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getSpelling();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CategoryItemAlternativeSpellingRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CategoryItemAlternativeSpellingRecord value2(Integer value) {
        setCategoryId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CategoryItemAlternativeSpellingRecord value3(Integer value) {
        setCategoryItemId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CategoryItemAlternativeSpellingRecord value4(String value) {
        setSpelling(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CategoryItemAlternativeSpellingRecord values(Integer value1, Integer value2, Integer value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CategoryItemAlternativeSpellingRecord
     */
    public CategoryItemAlternativeSpellingRecord() {
        super(CategoryItemAlternativeSpelling.CATEGORY_ITEM_ALTERNATIVE_SPELLING);
    }

    /**
     * Create a detached, initialised CategoryItemAlternativeSpellingRecord
     */
    public CategoryItemAlternativeSpellingRecord(Integer id, Integer categoryId, Integer categoryItemId, String spelling) {
        super(CategoryItemAlternativeSpelling.CATEGORY_ITEM_ALTERNATIVE_SPELLING);

        set(0, id);
        set(1, categoryId);
        set(2, categoryItemId);
        set(3, spelling);
    }
}
