/*
 * This file is generated by jOOQ.
*/
package se.olander.categories.jooq.categories.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import se.olander.categories.jooq.categories.Categories;
import se.olander.categories.jooq.categories.Keys;
import se.olander.categories.jooq.categories.tables.records.GuessRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Guess extends TableImpl<GuessRecord> {

    private static final long serialVersionUID = 94018104;

    /**
     * The reference instance of <code>categories.guess</code>
     */
    public static final Guess GUESS = new Guess();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GuessRecord> getRecordType() {
        return GuessRecord.class;
    }

    /**
     * The column <code>categories.guess.id</code>.
     */
    public final TableField<GuessRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>categories.guess.user_id</code>.
     */
    public final TableField<GuessRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>categories.guess.game_id</code>.
     */
    public final TableField<GuessRecord, Integer> GAME_ID = createField("game_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>categories.guess.guess_raw</code>.
     */
    public final TableField<GuessRecord, String> GUESS_RAW = createField("guess_raw", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>categories.guess.category_item_id</code>.
     */
    public final TableField<GuessRecord, Integer> CATEGORY_ITEM_ID = createField("category_item_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>categories.guess.created_time</code>.
     */
    public final TableField<GuessRecord, Timestamp> CREATED_TIME = createField("created_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>categories.guess</code> table reference
     */
    public Guess() {
        this("guess", null);
    }

    /**
     * Create an aliased <code>categories.guess</code> table reference
     */
    public Guess(String alias) {
        this(alias, GUESS);
    }

    private Guess(String alias, Table<GuessRecord> aliased) {
        this(alias, aliased, null);
    }

    private Guess(String alias, Table<GuessRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Categories.CATEGORIES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<GuessRecord, Integer> getIdentity() {
        return Keys.IDENTITY_GUESS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<GuessRecord> getPrimaryKey() {
        return Keys.KEY_GUESS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<GuessRecord>> getKeys() {
        return Arrays.<UniqueKey<GuessRecord>>asList(Keys.KEY_GUESS_PRIMARY, Keys.KEY_GUESS_UNIQ__GAME_ID__CATEGORY_ITEM_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<GuessRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<GuessRecord, ?>>asList(Keys.GUESS_IBFK_1, Keys.GUESS_IBFK_2, Keys.GUESS_IBFK_3);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Guess as(String alias) {
        return new Guess(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Guess rename(String name) {
        return new Guess(name, null);
    }
}
